<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Dotnet on -小佑-（&lt;ゝω·）キラbosh☆</title><link>https://yuchia-wei.github.io/tags/dotnet/</link><description>Recent content in Dotnet on -小佑-（&lt;ゝω·）キラbosh☆</description><generator>Hugo</generator><language>zh-TW</language><lastBuildDate>Sun, 15 Jun 2025 10:28:00 +0800</lastBuildDate><atom:link href="https://yuchia-wei.github.io/tags/dotnet/index.xml" rel="self" type="application/rss+xml"/><item><title>幫 AspNetCore WebApi 包上自己的 response model，Part 2 : 包裝例外</title><link>https://yuchia-wei.github.io/2024/11/aspnetcore-webapi-custom-response-model-part2-wrapping-exception/</link><pubDate>Sun, 17 Nov 2024 11:30:00 +0800</pubDate><guid>https://yuchia-wei.github.io/2024/11/aspnetcore-webapi-custom-response-model-part2-wrapping-exception/</guid><description>&lt;p>這篇為 「幫 AspNetCore WebApi 包上自己的 response model」 的第二部分 「包裝例外」。
&lt;/br>&lt;/p>
&lt;p>我將介紹如何在 ASP.NET Core Web API 中統一處理例外狀況，並將其包裝成標準化的回應格式。&lt;/p>
&lt;p>我會介紹以下兩種例外資料的包裝方法：&lt;/p>
&lt;ol>
&lt;li>使用 UseExceptionHandler Middleware&lt;/li>
&lt;li>使用 IExceptionFilter 介面&lt;/li>
&lt;/ol></description></item><item><title>幫 AspNetCore WebApi 包上自己的 response model，Part 1 : 包裝 api 回應</title><link>https://yuchia-wei.github.io/2024/10/aspnetcore-webapi-custom-response-model-part1-wrapping-api-response/</link><pubDate>Sat, 12 Oct 2024 00:00:00 +0800</pubDate><guid>https://yuchia-wei.github.io/2024/10/aspnetcore-webapi-custom-response-model-part1-wrapping-api-response/</guid><description>&lt;p>在設計 web api 時，通常會想要有一個自己系統專用的標準化回應格式，我在前一份工作中因為已經有底層的前輩建立好相關的處理套件，所以一直以來都沒特別研究怎麼包裝以及自訂回應欄位。
&lt;/br>
&lt;/br>
最近在自己的練習專案中嘗試去實作相關機制，才發現原來要考慮的東西有點多，這邊我就來分享一下我的做法以及其他可以用的方式與用途。
&lt;/br>
&lt;/br>
文章預計會分為四個部分，分別為&lt;/p>
&lt;ul>
&lt;li>Part 1 : 包裝 api 回應&lt;/li>
&lt;li>Part 2 : 包裝例外&lt;/li>
&lt;li>Part 3 : 其他包裝方法與適用情境&lt;/li>
&lt;li>Part 4 : 幫自動化產生的 Swagger Example / Schema 也加上 api response 的內容&lt;/li>
&lt;/ul>
&lt;/br>
這篇是第一部分 「包裝 api 回應」 後續其他部分我會努力趕工!!</description></item><item><title>C# Feature</title><link>https://yuchia-wei.github.io/2023/02/csharp-feature/</link><pubDate>Sun, 26 Feb 2023 13:35:00 +0800</pubDate><guid>https://yuchia-wei.github.io/2023/02/csharp-feature/</guid><description>&lt;p>以下紀錄一些常用的 C# 語法、特性&lt;/p></description></item></channel></rss>